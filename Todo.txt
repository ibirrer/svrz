[x] Display Ranking
[x] Display Games
[x] Deploy on github at http://ibirrer.github.io/svrz/

[x] make dev mode faster (npm run watch)
    [x] Use watchify instead of browserify in npm run watch

[x] focus on current team (games and ranking)

[x] Game Details
    [x] Fetch games details and show set result and map to gym
    [ ] Fetch the game details in parallel instead of fetching them in sequence (Task.sequence)
        See open issue on elm: https://github.com/elm-lang/core/issues/223
        using Effects-Extra together with sending to mailbox might work. See https://www.reddit.com/r/elm/comments/3xtxjx/periodic_http_request_to_refresh_data/
        for an example on how to send a task to a mailbox

[x] Write tests
    [x] elm
    [ ] http://webdriver.io/
    [ ] https://saucelabs.com/ free for open source projects
    [ ] Try https://www.npmjs.com/package/apimocker
        or https://www.npmjs.com/package/json-server for svrz mock

[o] Also scrape and display all other leagues
    [x] Read state from url -> http://ibirrer.github.io/svrz/teams/{:teamId}
        This needs a mapping from team to its league, which needs to be scraped. Doing it manually for the moment.
    [ ] Both team and league id should be strings
    [ ] Scrape "team -> league" mapping from svrz.ch

[ ] Show the date of the last data update in footer. E.g. "Last data update: 12.2.2016 20:33"

[ ] Log client side errors to couchdb
    [ ] https://trackjs.com/ too expensive (30.-/m) - but might be free for opensource projects

[ ] Possible replacement for https://aws.amazon.com/lambda/ crossorigin.me

[ ] Use table-layout: fixed;
    See https://css-tricks.com/fixing-tables-long-strings/

[ ] Add link to svrz web site to have quickly check original data

[ ] Add link to google maps

[x] Use PouchDB for local and remote caching of league data
    [x] browser db
    [ ] sync to couchdb
    [ ] Hash leagueInfo results to allow that only one user needs
        to scrape the league info

[x] Use uglify to make dist size smaller

[ ] Cleanup code (function names, action names, component per feature (ranking, games, data, ports, ?)

[ ] DNS entry for http://razfaz.there.ch or http://svrz.tvwollishofen.ch or ?

[ ] Error Handling
  [ ] http request to svrz failing
  [ ] scraping fails on JS side

[ ] Make it look nice (css)

[ ] Create minimal example of StartApp with inbound and outbound ports (blog it?)

[ ] Remove dependency to jquery
    File size of razfaz.js file in the dist is still pretty high (120KB) despite uglify and gzip (done by github pages)

[ ] Send emails to all players of a game/team

[-] Scrape html in elm
    Tried, but parsing html is very slow when doing it in js, the browser is much better at it.
    Might be an option if elm can somehow read the dom of the browser. Using ports for now.





Legend
------
[x] done
[*] in progress
[-] won't do


Articles
--------
* http://alistapart.com/article/motion-with-meaning-semantic-animation-in-interface-design

